@{
    ViewBag.Title = "Consultas";
}

<h1>Consultas Examen Jorge Andres Perez Barrios</h1>


<!-- 
    Division para colocar los botones de las consultas dinamicamente
    Descripcion: Itera sobre un valor máximo que es el número de botones a colocar en la GUI. Estos botones ejecutan las consultas 1 a 14 a la API por medio de metodos GET.
-->
<div>
    <h2>Ejecutar Consultas</h2>
    <div style="display: flex; gap: 10px; flex-wrap: wrap; margin-bottom: 20px;">
        @for (int i = 1; i <= 14; i++)
        {
            <form method="get" asp-action="Consulta" style="display: inline;">
                <input type="hidden" name="id" value="@i" />
                <button type="submit">Consulta @i</button>
            </form>
        }
    </div>
</div>


<!--
    Division para interfaz grafica de insercion de datos de departamento.
    Descripcion: Se crean los campos de texto para el ingreso de datos a la tabla de departamento para que, con un boton, los valores puedan ser enviados a la API por medio de un metodo POST.
-->
<div>
    <h2>Agregar Nuevo Departamento</h2>
    <form method="post" asp-action="AgregarDepartamento">
        <div>
            <label>Código:</label>
            <input type="number" name="CodigoDepartamento" required />
        </div>
        <div>
            <label>Nombre:</label>
            <input type="text" name="NombreDepto" required />
        </div>
        <div>
            <label>Presupuesto:</label>
            <input type="number" name="Presupuesto" required />
        </div>
        <button type="submit">Agregar Departamento</button>
    </form>
</div>


<!--
    Division para interfaz grafica de insercion de datos de empleados.
    Descripcion: Se crean los campos de texto para el ingreso de datos a la tabla de empleado para que, con un boton, los valores puedan ser enviados a la API por medio de un metodo POST.
-->
<div>
    <h2>Agregar Nuevo Empleado</h2>
    <form method="post" asp-action="AgregarEmpleado">
        <div>
            <label>DPI:</label>
            <input type="text" name="Dpi" required />
        </div>
        <div>
            <label>Nombre:</label>
            <input type="text" name="Nombre" required />
        </div>
        <div>
            <label>Apellidos:</label>
            <input type="text" name="Apellidos" required />
        </div>
        <div>
            <label>Código de Departamento:</label>
            <input type="number" name="CodDepto" required />
        </div>
        <button type="submit">Agregar Empleado</button>
    </form>
</div>


<!--
    Visualizacion de los datos obtenidos a traves del metodo GET
    Se parsea el resultado de formato JSON y se convierten los datos a un diccionario para luego iterar sobre este para obtener los nombres de las columnas y sus respectivos valores
    y mostrarlos como una tabla (nombres de columnas como headers y sus valores como datos).
-->
@if (ViewBag.Results != null && ViewBag.Results.Count > 0)
{
    <div>
        <h2>Consulta @ViewBag.ConsultaId</h2>
        <table border="1" style="border-collapse: collapse; width: 100%; margin-top: 20px;">
            <thead>
                <tr>
                    @foreach (var column in ((Dictionary<string, object>)ViewBag.Results[0]).Keys)
                    {
                        <th style="text-align: left; padding: 5px;">@column</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in ViewBag.Results)
                {
                    <tr>
                        @foreach (var value in ((Dictionary<string, object>)row).Values)
                        {
                            <td style="padding: 5px;">@value</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (ViewBag.Error != null)
{
    <p style="color: red;">@ViewBag.Error</p>
}
